<template>
  <div class="countdown-wrapper">
    <span>{{ 'Time Remaining To Claim Prize' | translate }}</span>
    <div>
      <span v-show="showHour">{{hours | two_digits}}</span>
      <span v-show="showHour">:</span>
      <span>{{minutes | two_digits}}</span>
      <span>:</span>
      <span>{{seconds | two_digits}}</span>
    </div>
  </div>
</template>
<script>
module.exports = {
  name: "countdown",
  data() {
    return {
      setIntervalID: 0,
      starttime: this.countdowntime
    };
  },
  props: {
    countdowntime: {
      type: Number,
      default: 0
    },
    showHour: {
      type: Boolean,
      default: false
    }
  },
  mounted() {
    this.startCountDown();
  },
  methods: {
    startCountDown() {
      this.setIntervalID = window.setInterval(() => {
        if (this.starttime > 0) {
          this.starttime -= 1;
        }
      }, 1000);
    }
  },
  filters: {
    two_digits(value) {
      if (value.toString().length <= 1) {
        return "0" + value.toString();
      }
      return value.toString();
    }
  },
  computed: {
    hours() {
      return Math.trunc((this.starttime % (24 * 3600)) / 3600);
    },
    minutes() {
      return Math.trunc((this.starttime % 3600) / 60);
    },
    seconds() {
      return Math.trunc(this.starttime % 60);
    }
  },
  watch: {
    starttime: function(newValue) {
      if (newValue == 0) {
        clearInterval(this.setIntervalID);
        this.$emit("countdown-end");
      }
    }
  }
};
</script>
<style scoped>
.countdown-wrapper {
  font-family: "GOTHICB";
  text-align: center;
}

.countdown-wrapper > span {
  color: rgba(255, 255, 255, 0.85);
}

.countdown-wrapper > div {
  margin-top: 0.4rem;
}

.countdown-wrapper > div > span {
  font-size: 2rem;
  color: #fbea7b;
}

/* horizental */
@media screen and (max-height: 400px) {
  .countdown-wrapper {
    width: 250px;
  }
}
</style>
